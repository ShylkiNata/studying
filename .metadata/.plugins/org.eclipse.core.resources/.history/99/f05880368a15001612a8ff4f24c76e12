package win_logic;

	import java.net.*;
import java.io.*;

import win_model.ServerData;
	public class ServerLogic implements Runnable {
	int port;
		
	public ServerLogic(int port){
       this.port=port;
	}
	
	@Override
	public void run() {
		// случайный порт (может быть любое число от 1025 до 65535)
	     
	       try {
	         ServerSocket ss = new ServerSocket(port); // создаем сокет сервера и привязываем его к вышеуказанному порту
	         System.out.println("Waiting for a client...");

	         Socket socket = ss.accept(); // заставляем сервер ждать подключений и выводим сообщение когда кто-то связался с сервером
	         System.out.println("Got a client :) ... Finally, someone saw me through all the cover!");

	         ServerData.GotAServerFLAG=1;

	 // Берем входной и выходной потоки сокета, теперь можем получать и отсылать данные клиенту. 
	         ObjectInputStream inS = new ObjectInputStream(socket.getInputStream());
	         ObjectOutputStream outS = new ObjectOutputStream(socket.getOutputStream());

		         outS.writeObject("kfkfg"); outS.flush(); outS.close();
		       /*  outS.writeObject(DrawPanel.FigureOrder); outS.flush();
		         outS.writeObject(DrawPanel.ColorOrder); outS.flush();
		         outS.writeObject(DrawPanel.WidthOrder); outS.flush();
		         outS.writeObject(DrawPanel.ColorFillOrder); outS.flush();
		         outS.writeObject(DrawPanel.ShapeOrder); outS.flush();
		         outS.writeObject(DrawPanel.StringOrder); outS.flush();
		         outS.writeObject(DrawPanel.FontOrder); outS.flush();*/
	         
	           System.out.println("Done...");
	           System.out.println();
	         
	      } catch(Exception x) { x.printStackTrace(); } 
	}
}